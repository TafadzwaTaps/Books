@model List<Books.Models.Book>

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<h2>Book Information</h2>

<p><strong>Title:</strong> @Model[0].Title</p>
<p><strong>Author:</strong> @Model[0].Author</p>
<p><strong>Number of Pages:</strong> @Model[0].NumberOfPages</p>
<p><strong>Categories:</strong> @string.Join(", ", Model[0].Categories)</p>

<h2>Book List</h2>

<ul>
    @foreach (var book in Model)
    {
        <li>@book.Title (@book.Author)</li>
    }
</ul>

<h2>Add Book</h2>

@using (Html.BeginForm())
{
    <div>
        <label for="Title">Title:</label>
        @Html.TextBoxFor(model => model[0].Title)
    </div>
    <div>
        <label for="Author">Author:</label>
        @Html.TextBoxFor(model => model[0].Author)
    </div>
    <div>
        <label for="NumberOfPages">Number of Pages:</label>
        @Html.TextBoxFor(model => model[0].NumberOfPages)
    </div>
    <div>
        <label for="Categories">Categories:</label>
        @Html.TextBoxFor(model => model[0].Categories, new { placeholder = "Separate categories with commas" })
    </div>
    <input type="submit" value="Add" />
}

<li>@Html.ActionLink("Add Book", "Add")</li>

<ul>
    @foreach (var book in Model)
    {
        <li>
            @book.Title (@book.Author)
            <form action="@Url.Action("Delete", "Book", new { id = book.Id })" method="post" style="display: inline;">
                <input type="submit" value="Delete" onclick="return confirm('Are you sure you want to delete this book?');" />
            </form>
        </li>
    }
</ul>
